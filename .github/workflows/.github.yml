name: Deploy Code to ECS

on:
  push:
    branches:
      - release
    tags:
      - "*"
  pull_request:
    branches:
      - main
      - release

env:
  KUBE_NAMESPACE: development
 
jobs:
  ci:
    name: Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Lint code"
        run: |
          echo "Linting repository"
      
      - name: "Run unit tests"
        run: |
          echo "Running unit tests"
  
  cd:
    name: Deployment
    runs-on: ubuntu-latest
    needs:
      - ci
    steps:
      - name: Cancel Previous Runs               
        uses: styfle/cancel-workflow-action@0.4.1
        with:                                    
          access_token: ${{ github.token }}  
    
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: demotsz-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        
      - name: Deploy to Kubernetes cluster                                                                            
        uses: kodermax/kubectl-aws-eks@master                                                                         
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: demotsz-repo
          IMAGE_TAG: ${{ github.sha }} 
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}  
          KUBECTL_VERSION: "v1.21.2"         
        with:                                                                                                         
          args: set image deployment/demo-deployment demo=${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:${{env.IMAGE_TAG}} --record -n ${{ env.KUBE_NAMESPACE }}        

      - name: Verify Kubernetes deployment                               
        uses: kodermax/kubectl-aws-eks@master  
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }} 
          KUBECTL_VERSION: "v1.21.2"   
        with:                                                            
          args: rollout status deploy demo-deployment -n ${{ env.KUBE_NAMESPACE }}          